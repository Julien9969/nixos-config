# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usb_storage" "sd_mod" "sr_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/8db83988-b6af-4e69-a63e-8bf610858152";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/4BBB-C715";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/media/HDD" =
    { device = "/dev/disk/by-uuid/E26E78BA6E7888D5";
      fsType = "ntfs3";
      options = [
          "umask=0000"        # Allows read, write, and execute for all users
          "uid=0"             # root ownership, but rwx for all users
          "gid=0"             # group ownership, but rwx for all users
        ];
    };
  
  services.udev.extraRules = 
   let
     mkRule = as: lib.concatStringsSep ", " as;
     mkRules = rs: lib.concatStringsSep "\n" rs;
   in mkRules ([( mkRule [
     ''ACTION=="add|change"''
     ''SUBSYSTEM=="block"''
     ''KERNEL=="sd[a-z]"''
     ''ATTR{queue/rotational}=="1"''
     ''RUN+="${pkgs.hdparm}/bin/hdparm -B 90 -S 41 /dev/%k1"''
   ])]); 
  
  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0f1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
